/* eslint no-unused-vars: 0 */
import { html, classMap, ifDefined, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
function block0(context, tags, suffix) { return html `<div class="ui5-avatar-group-root"><div class="ui5-avatar-group-items" @keyup="${this._onkeyup}" @keydown="${this._onkeydown}" @focusin="${this._onfocusin}" tabindex="${ifDefined(this._groupTabIndex)}" @click="${this._onClick}" @ui5-click="${ifDefined(this._onUI5Click)}" aria-label="${ifDefined(this._ariaLabelText)}" role="${ifDefined(this._role)}" aria-haspopup="${ifDefined(this._containerAriaHasPopup)}"><slot></slot>${this._customOverflowButton ? block1.call(this, context, tags, suffix) : block2.call(this, context, tags, suffix)}</div></div>`; }
function block1(context, tags, suffix) { return html `<slot name="overflowButton"></slot>`; }
function block2(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-button", tags, suffix)} .accessibilityAttributes="${ifDefined(this._overflowButtonAccAttributes)}" aria-label="${ifDefined(this._overflowButtonAriaLabelText)}" ?hidden="${this._overflowBtnHidden}" ?non-interactive=${this._isGroup} class="${classMap(this.classes.overflowButton)}">${ifDefined(this._overflowButtonText)}</${scopeTag("ui5-button", tags, suffix)}>` : html `<ui5-button .accessibilityAttributes="${ifDefined(this._overflowButtonAccAttributes)}" aria-label="${ifDefined(this._overflowButtonAriaLabelText)}" ?hidden="${this._overflowBtnHidden}" ?non-interactive=${this._isGroup} class="${classMap(this.classes.overflowButton)}">${ifDefined(this._overflowButtonText)}</ui5-button>`; }
export default block0;
//# sourceMappingURL=AvatarGroupTemplate.lit.js.map