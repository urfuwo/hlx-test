/* eslint no-unused-vars: 0 */
import { html, repeat, classMap, ifDefined, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
function block0(context, tags, suffix) { return html `<div class="${classMap(this.classes.colorPaletteRoot)}" @click=${this._onclick} @keyup=${this._onkeyup} @keydown=${this._onkeydown}>${this.showDefaultColor ? block1.call(this, context, tags, suffix) : undefined}<div class="ui5-cp-item-container" role="region" aria-label="${ifDefined(this.colorContainerLabel)}" @keydown="${this._onColorContainerKeyDown}">${repeat(this.displayedColors, (item, index) => item._id || index, (item, index) => block2.call(this, context, tags, suffix, item, index))}</div>${this._showMoreColors ? block3.call(this, context, tags, suffix) : undefined}${this.showRecentColors ? block4.call(this, context, tags, suffix) : undefined}</div>`; }
function block1(context, tags, suffix) { return suffix ? html `<div class="ui5-cp-default-color-button-wrapper"><${scopeTag("ui5-button", tags, suffix)} class="ui5-cp-default-color-button" design="Transparent" @click=${this._onDefaultColorClick} @keydown=${this._onDefaultColorKeyDown}>Default color</${scopeTag("ui5-button", tags, suffix)}><div class="ui5-cp-separator"></div></div>` : html `<div class="ui5-cp-default-color-button-wrapper"><ui5-button class="ui5-cp-default-color-button" design="Transparent" @click=${this._onDefaultColorClick} @keydown=${this._onDefaultColorKeyDown}>Default color</ui5-button><div class="ui5-cp-separator"></div></div>`; }
function block2(context, tags, suffix, item, index) { return html `<slot name="${ifDefined(item._individualSlot)}"></slot>`; }
function block3(context, tags, suffix) { return suffix ? html `<div class="ui5-cp-more-colors-wrapper"><div class="ui5-cp-separator"></div><${scopeTag("ui5-button", tags, suffix)} design="Transparent" class="ui5-cp-more-colors" @click="${this._openMoreColorsDialog}" @keydown=${this._onMoreColorsKeyDown}>${ifDefined(this.colorPaleteMoreColorsText)}</${scopeTag("ui5-button", tags, suffix)}></div>` : html `<div class="ui5-cp-more-colors-wrapper"><div class="ui5-cp-separator"></div><ui5-button design="Transparent" class="ui5-cp-more-colors" @click="${this._openMoreColorsDialog}" @keydown=${this._onMoreColorsKeyDown}>${ifDefined(this.colorPaleteMoreColorsText)}</ui5-button></div>`; }
function block4(context, tags, suffix) { return html `<div class="ui5-cp-recent-colors-wrapper"><div class="ui5-cp-separator"></div><div class="ui5-cp-recent-colors-container" @keydown="${this._onRecentColorsContainerKeyDown}">${repeat(this.recentColors, (item, index) => item._id || index, (item, index) => block5.call(this, context, tags, suffix, item, index))}</div></div>`; }
function block5(context, tags, suffix, item, index) { return suffix ? html `<${scopeTag("ui5-color-palette-item", tags, suffix)} value="${ifDefined(item)}"></${scopeTag("ui5-color-palette-item", tags, suffix)}>` : html `<ui5-color-palette-item value="${ifDefined(item)}"></ui5-color-palette-item>`; }
export default block0;
//# sourceMappingURL=ColorPaletteTemplate.lit.js.map