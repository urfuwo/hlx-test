/* eslint no-unused-vars: 0 */
import { html, classMap, styleMap, ifDefined, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
function block0(context, tags, suffix) { return html `<div class="ui5-panel-root" role="${ifDefined(this.accRole)}" aria-label="${ifDefined(this.effectiveAccessibleName)}" aria-labelledby="${ifDefined(this.fixedPanelAriaLabelledbyReference)}">${this.hasHeaderOrHeaderText ? block1.call(this, context, tags, suffix) : undefined}<div class="ui5-panel-content" id="${ifDefined(this._id)}-content" tabindex="-1" style="${styleMap(this.styles.content)}" part="content"><slot></slot></div></div>`; }
function block1(context, tags, suffix) { return html `<div class="ui5-panel-heading-wrapper${classMap(this.classes.stickyHeaderClass)}" role="${ifDefined(this.headingWrapperRole)}" aria-level="${ifDefined(this.headingWrapperAriaLevel)}"><div @click="${this._headerClick}" @keydown="${this._headerKeyDown}" @keyup="${this._headerKeyUp}" class="ui5-panel-header" tabindex="${ifDefined(this.headerTabIndex)}" role="${ifDefined(this.accInfo.role)}" aria-expanded="${ifDefined(this.accInfo.ariaExpanded)}" aria-controls="${ifDefined(this.accInfo.ariaControls)}" aria-labelledby="${ifDefined(this.accInfo.ariaLabelledby)}" part="header">${!this.fixed ? block2.call(this, context, tags, suffix) : undefined}${this._hasHeader ? block5.call(this, context, tags, suffix) : block6.call(this, context, tags, suffix)}</div></div>`; }
function block2(context, tags, suffix) { return html `<div class="ui5-panel-header-button-root">${this._hasHeader ? block3.call(this, context, tags, suffix) : block4.call(this, context, tags, suffix)}</div>`; }
function block3(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-button", tags, suffix)} design="Transparent" class="ui5-panel-header-button ui5-panel-header-button-with-icon" @click="${this._toggleButtonClick}" .accessibilityAttributes=${ifDefined(this.accInfo.button.accessibilityAttributes)} tooltip="${ifDefined(this.accInfo.button.title)}" accessible-name="${ifDefined(this.accInfo.button.ariaLabelButton)}"><div class="ui5-panel-header-icon-wrapper"><${scopeTag("ui5-icon", tags, suffix)} class="ui5-panel-header-icon ${classMap(this.classes.headerBtn)}" name="slim-arrow-right"></${scopeTag("ui5-icon", tags, suffix)}></div></${scopeTag("ui5-button", tags, suffix)}>` : html `<ui5-button design="Transparent" class="ui5-panel-header-button ui5-panel-header-button-with-icon" @click="${this._toggleButtonClick}" .accessibilityAttributes=${ifDefined(this.accInfo.button.accessibilityAttributes)} tooltip="${ifDefined(this.accInfo.button.title)}" accessible-name="${ifDefined(this.accInfo.button.ariaLabelButton)}"><div class="ui5-panel-header-icon-wrapper"><ui5-icon class="ui5-panel-header-icon ${classMap(this.classes.headerBtn)}" name="slim-arrow-right"></ui5-icon></div></ui5-button>`; }
function block4(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-icon", tags, suffix)} class="ui5-panel-header-button ui5-panel-header-icon ${classMap(this.classes.headerBtn)}" name="slim-arrow-right" show-tooltip accessible-name="${ifDefined(this.toggleButtonTitle)}"></${scopeTag("ui5-icon", tags, suffix)}>` : html `<ui5-icon class="ui5-panel-header-button ui5-panel-header-icon ${classMap(this.classes.headerBtn)}" name="slim-arrow-right" show-tooltip accessible-name="${ifDefined(this.toggleButtonTitle)}"></ui5-icon>`; }
function block5(context, tags, suffix) { return html `<slot name="header"></slot>`; }
function block6(context, tags, suffix) { return html `<div id="${ifDefined(this._id)}-header-title" class="ui5-panel-header-title">${ifDefined(this.headerText)}</div>`; }
export default block0;
//# sourceMappingURL=PanelTemplate.lit.js.map