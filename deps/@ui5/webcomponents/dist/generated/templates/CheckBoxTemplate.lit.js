/* eslint no-unused-vars: 0 */
import { html, classMap, ifDefined, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
function block0(context, tags, suffix) { return html `<div class="ui5-checkbox-root ${classMap(this.classes.main)}" role="checkbox" part="root" aria-checked="${ifDefined(this.effectiveAriaChecked)}" aria-readonly="${ifDefined(this.ariaReadonly)}" aria-disabled="${ifDefined(this.effectiveAriaDisabled)}" aria-label="${ifDefined(this.ariaLabelText)}" aria-labelledby="${ifDefined(this.ariaLabelledBy)}" aria-describedby="${ifDefined(this.ariaDescribedBy)}" aria-required="${ifDefined(this.required)}" tabindex="${ifDefined(this.effectiveTabIndex)}" @mousedown="${this._onmousedown}" @mouseup="${this._onmouseup}" @keydown="${this._onkeydown}" @keyup="${this._onkeyup}" @click="${this._onclick}" @focusout="${this._onfocusout}"><div id="${ifDefined(this._id)}-CbBg" class="ui5-checkbox-inner">${this.isCompletelyChecked ? block1.call(this, context, tags, suffix) : undefined}<input id="${ifDefined(this._id)}-CB" type='checkbox' ?checked="${this.checked}" ?readonly="${this.readonly}" ?disabled="${this.disabled}" tabindex="-1" aria-hidden="true" data-sap-no-tab-ref /></div>${this.text ? block2.call(this, context, tags, suffix) : undefined}${this.hasValueState ? block3.call(this, context, tags, suffix) : undefined}<slot name="formSupport"></slot></div>`; }
function block1(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-icon", tags, suffix)} aria-hidden="true" name="accept" class="ui5-checkbox-icon"></${scopeTag("ui5-icon", tags, suffix)}>` : html `<ui5-icon aria-hidden="true" name="accept" class="ui5-checkbox-icon"></ui5-icon>`; }
function block2(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-label", tags, suffix)} part="label" id="${ifDefined(this._id)}-label" class="ui5-checkbox-label" wrapping-type="${ifDefined(this.wrappingType)}">${ifDefined(this.text)}</${scopeTag("ui5-label", tags, suffix)}>` : html `<ui5-label part="label" id="${ifDefined(this._id)}-label" class="ui5-checkbox-label" wrapping-type="${ifDefined(this.wrappingType)}">${ifDefined(this.text)}</ui5-label>`; }
function block3(context, tags, suffix) { return html `<span id="${ifDefined(this._id)}-descr" class="ui5-hidden-text">${ifDefined(this.valueStateText)}</span>`; }
export default block0;
//# sourceMappingURL=CheckBoxTemplate.lit.js.map