/* eslint no-unused-vars: 0 */
import { html, repeat, ifDefined, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
function block0(context, tags, suffix) { return html `<div class="ui5-time-selection-inputs" @keydown="${this._onkeydown}">${repeat(this._entities, (item, index) => item._id || index, (item, index) => block1.call(this, context, tags, suffix, item, index))}${this._periods.length ? block3.call(this, context, tags, suffix) : undefined}</div>`; }
function block1(context, tags, suffix, item, index) { return suffix ? html `${item.hasSeparator ? block2.call(this, context, tags, suffix, item, index) : undefined}<${scopeTag("ui5-input", tags, suffix)} id="${ifDefined(this._id)}_input_${ifDefined(item.entity)}" data-sap-input="${ifDefined(item.entity)}" type="${ifDefined(this._numberType)}" maxlength="2" autocomplete="off" pattern="[0-9]*" inputmode="numeric" class="ui5-time-selection-numeric-input" .value="${ifDefined(item.stringValue)}" .accessibleName="${ifDefined(item.label)}" ._nativeInputAttributes=${ifDefined(item.attributes)} @focusin=${this._onfocusin} @focusout=${this._onfocusout} @ui5-input=${ifDefined(this._oninput)}></${scopeTag("ui5-input", tags, suffix)}>` : html `${item.hasSeparator ? block2.call(this, context, tags, suffix, item, index) : undefined}<ui5-input id="${ifDefined(this._id)}_input_${ifDefined(item.entity)}" data-sap-input="${ifDefined(item.entity)}" type="${ifDefined(this._numberType)}" maxlength="2" autocomplete="off" pattern="[0-9]*" inputmode="numeric" class="ui5-time-selection-numeric-input" .value="${ifDefined(item.stringValue)}" .accessibleName="${ifDefined(item.label)}" ._nativeInputAttributes=${ifDefined(item.attributes)} @focusin=${this._onfocusin} @focusout=${this._onfocusout} @ui5-input=${ifDefined(this._oninput)}></ui5-input>`; }
function block2(context, tags, suffix, item, index) { return html `<span separator>:</span>`; }
function block3(context, tags, suffix) { return suffix ? html `<span separator></span><${scopeTag("ui5-segmented-button", tags, suffix)} id="${ifDefined(this._id)}_AmPm" @click=${this._periodChange}>${repeat(this._periods, (item, index) => item._id || index, (item, index) => block4.call(this, context, tags, suffix, item, index))}</${scopeTag("ui5-segmented-button", tags, suffix)}>` : html `<span separator></span><ui5-segmented-button id="${ifDefined(this._id)}_AmPm" @click=${this._periodChange}>${repeat(this._periods, (item, index) => item._id || index, (item, index) => block4.call(this, context, tags, suffix, item, index))}</ui5-segmented-button>`; }
function block4(context, tags, suffix, item, index) { return suffix ? html `<${scopeTag("ui5-segmented-button-item", tags, suffix)} ?pressed=${item.pressed}>${ifDefined(item.label)}</${scopeTag("ui5-segmented-button-item", tags, suffix)}>` : html `<ui5-segmented-button-item ?pressed=${item.pressed}>${ifDefined(item.label)}</ui5-segmented-button-item>`; }
export default block0;
//# sourceMappingURL=TimeSelectionInputsTemplate.lit.js.map